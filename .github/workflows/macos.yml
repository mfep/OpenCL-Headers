name: MacOS

on: [push, pull_request]

jobs:
  compatibility:
    runs-on: macos-13
    strategy:
      matrix:
        C_COMPILER:
        - /usr/bin/gcc # Actually Clang 14
        - /usr/local/bin/gcc-11
        - /usr/local/bin/gcc-13
        GEN: 
        - Xcode
        - Ninja Multi-Config
        STD: [99, 11, 17]
        exclude:
        - C_COMPILER: /usr/bin/gcc
          GEN: Ninja Multi-Config
        - C_COMPILER: /usr/local/bin/gcc-11
          GEN: Xcode
        - C_COMPILER: /usr/local/bin/gcc-13
          GEN: Xcode

    steps:
    - name: Checkout OpenCL-Headers
      uses: actions/checkout@v3

    - name: Create Build Environment
      shell: bash
      run: |
        cmake -E make_directory $GITHUB_WORKSPACE/build;
        cmake -E make_directory $GITHUB_WORKSPACE/install;
        if [[ "${{matrix.GEN}}" == "Ninja Multi-Config" && ! `which ninja` ]]; then brew install ninja; fi;
        # Install Ninja only if it's the selected generator and it's not available.
        cmake --version

    - name: Configure
      shell: bash
      run: cmake
        -G "${{matrix.GEN}}"
        -D BUILD_TESTING=ON
        -D CMAKE_C_FLAGS="-Wall -Wextra -pedantic -Werror"
        -D CMAKE_C_COMPILER=${{matrix.C_COMPILER}}
        -D CMAKE_C_STANDARD=${{matrix.STD}}
        -D CMAKE_C_EXTENSIONS=OFF
        -D CMAKE_C_STANDARD_REQUIRED=ON
        -D CMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/install
        -S $GITHUB_WORKSPACE
        -B $GITHUB_WORKSPACE/build

    - name: Build
      shell: bash
      run: |
        cmake --build $GITHUB_WORKSPACE/build --config Release --parallel `sysctl -n hw.logicalcpu` `if [[ "${{matrix.GEN}}" == "Xcode" ]]; then echo "-- -quiet"; fi;`
        cmake --build $GITHUB_WORKSPACE/build --config Debug   --parallel `sysctl -n hw.logicalcpu` `if [[ "${{matrix.GEN}}" == "Xcode" ]]; then echo "-- -quiet"; fi;`

    - name: Test
      working-directory: ${{runner.workspace}}/OpenCL-Headers/build
      shell: bash
      run: |
        ctest -C Release --output-on-failure --parallel `sysctl -n hw.logicalcpu`
        ctest -C Debug   --output-on-failure --parallel `sysctl -n hw.logicalcpu`

    - name: Test install
      shell: bash
      run: cmake --build $GITHUB_WORKSPACE/build --target install --config Release

    - name: Consume (install)
      shell: bash
      run: cmake
        -G "${{matrix.GEN}}"
        -D BUILD_TESTING=ON
        -D CMAKE_C_FLAGS="-Wall -Wextra -pedantic -Werror"
        -D CMAKE_C_COMPILER=${{matrix.C_COMPILER}}
        -D CMAKE_C_STANDARD=${{matrix.STD}}
        -D CMAKE_C_EXTENSIONS=OFF
        -D CMAKE_C_STANDARD_REQUIRED=ON
        -D CMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/install
        -S $GITHUB_WORKSPACE/tests/pkgconfig/bare
        -B $GITHUB_WORKSPACE/build_install &&
        cmake --build $GITHUB_WORKSPACE/build_install --config Release --parallel `sysctl -n hw.logicalcpu` `if [[ "${{matrix.GEN}}" == "Xcode" ]]; then echo "-- -quiet"; fi;` &&
        cmake --build $GITHUB_WORKSPACE/build_install --config Debug --parallel `sysctl -n hw.logicalcpu` `if [[ "${{matrix.GEN}}" == "Xcode" ]]; then echo "-- -quiet"; fi;`

    - name: Test pkg-config
      shell: bash
      run: |
        if [[ ! `which pkg-config` ]]; then brew install pkg-config; fi;
        PKG_CONFIG_PATH="$GITHUB_WORKSPACE/install/share/pkgconfig" pkg-config OpenCL-Headers --cflags | grep -q "\-I$GITHUB_WORKSPACE/install/include"
