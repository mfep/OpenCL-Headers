name: Linux

on: [push, pull_request]

jobs:
  compatibility:
    if: false
    runs-on: ubuntu-latest
    strategy:
      matrix:
        CMAKE: [3.26.4]
        C_COMPILER:
          - gcc-11
          - gcc-13
          - clang-14
          - clang-16
        BIN: [64]
        STD: [99, 11, 17]
        CONF:
          - GEN: Unix Makefiles
            CONFIG: Debug
          - GEN: Unix Makefiles
            CONFIG: Release
          - GEN: Ninja Multi-Config
            CONFIG: Release
        IMAGE:
          - streamhpc/opencl-sdk-intelcpu:ubuntu-22.04-20230717
        include:
          - CMAKE: 3.0.2
            C_COMPILER: gcc-9
            BIN: 64
            STD: 99
            CONF:
              GEN: Unix Makefiles
              CONFIG: Debug
            IMAGE: streamhpc/opencl-sdk-intelcpu:ubuntu-20.04-20230717
          - CMAKE: 3.0.2
            C_COMPILER: gcc-9
            BIN: 64
            STD: 99
            CONF:
              GEN: Unix Makefiles
              CONFIG: Release
            IMAGE: streamhpc/opencl-sdk-intelcpu:ubuntu-20.04-20230717
          - CMAKE: 3.0.2
            C_COMPILER: gcc-9
            BIN: 32
            STD: 99
            CONF:
              GEN: Unix Makefiles
              CONFIG: Debug
            IMAGE: streamhpc/opencl-sdk-intelcpu:ubuntu-20.04-20230717
          - CMAKE: 3.0.2
            C_COMPILER: gcc-9
            BIN: 32
            STD: 99
            CONF:
              GEN: Unix Makefiles
              CONFIG: Release
            IMAGE: streamhpc/opencl-sdk-intelcpu:ubuntu-20.04-20230717
          - CMAKE: 3.0.2
            C_COMPILER: gcc-11
            BIN: 64
            STD: 99
            CONF:
              GEN: Unix Makefiles
              CONFIG: Debug
            IMAGE: streamhpc/opencl-sdk-intelcpu:ubuntu-22.04-20230717
          - CMAKE: 3.0.2
            C_COMPILER: gcc-11
            BIN: 64
            STD: 99
            CONF:
              GEN: Unix Makefiles
              CONFIG: Release
            IMAGE: streamhpc/opencl-sdk-intelcpu:ubuntu-22.04-20230717
    container: ${{matrix.IMAGE}}
    env:
      CMAKE_EXE: /opt/Kitware/CMake/${{ matrix.CMAKE }}/bin/cmake
      CPACK_EXE: /opt/Kitware/CMake/${{ matrix.CMAKE }}/bin/cpack
      CTEST_EXE: /opt/Kitware/CMake/${{ matrix.CMAKE }}/bin/ctest
      CC: ${{matrix.C_COMPILER}}

    steps:
    - name: Checkout OpenCL-Headers
      uses: actions/checkout@v3

    - name: Configure
      shell: bash
      run: mkdir $GITHUB_WORKSPACE/build && cd $GITHUB_WORKSPACE/build &&
        $CMAKE_EXE
        -G "${{matrix.CONF.GEN}}"
        -D BUILD_TESTING=ON
        -D CMAKE_BUILD_TYPE=${{matrix.CONF.CONFIG}}
        -D CMAKE_C_STANDARD=${{matrix.STD}}
        -D CMAKE_C_FLAGS="-Wall -Wextra -pedantic -Werror -m${{matrix.BIN}}"
        -D CMAKE_C_EXTENSIONS=OFF
        -D CMAKE_INSTALL_PREFIX=`if [[ "${{matrix.CMAKE}}" != "3.0.2" ]]; then echo "$GITHUB_WORKSPACE/install"; else echo "/usr"; fi`
        `if [[ "${{matrix.CMAKE}}" != "3.0.2" ]]; then echo "-D CPACK_PACKAGING_INSTALL_PREFIX=/usr"; fi`
        $GITHUB_WORKSPACE

    - name: Build
      shell: bash
      run: if [[ "${{matrix.CONF.GEN}}" == "Unix Makefiles" ]];
        then
          $CMAKE_EXE --build $GITHUB_WORKSPACE/build -- -j`nproc`;
        else
          $CMAKE_EXE --build $GITHUB_WORKSPACE/build --config Debug   -- -j`nproc`;
          $CMAKE_EXE --build $GITHUB_WORKSPACE/build --config Release -- -j`nproc`;
        fi;

    - name: Test
      shell: bash
      working-directory: ${{runner.workspace}}/OpenCL-Headers/build
      run: if [[ "${{matrix.CONF.GEN}}" == "Unix Makefiles" ]];
        then
          $CTEST_EXE --output-on-failure --parallel `nproc`;
        else
          $CTEST_EXE --output-on-failure -C Debug   --parallel `nproc`;
          $CTEST_EXE --output-on-failure -C Release --parallel `nproc`;
        fi;

    - name: Package DEB
      shell: bash
      run: $CPACK_EXE
        --config "$GITHUB_WORKSPACE/build/CPackConfig.cmake"
        -G DEB
        -C Release
        -B "$GITHUB_WORKSPACE/package-deb"

    - name: Consume (DEB)
      shell: bash
      run: dpkg -i $GITHUB_WORKSPACE/package-deb/*.deb &&
        mkdir $GITHUB_WORKSPACE/build_package && cd $GITHUB_WORKSPACE/build_package &&
        $CMAKE_EXE
        -G "${{matrix.CONF.GEN}}"
        -D CMAKE_BUILD_TYPE=${{matrix.CONF.CONFIG}}
        -D CMAKE_C_STANDARD=${{matrix.STD}}
        -D CMAKE_C_FLAGS="-Wall -Wextra -pedantic -Werror -m${{matrix.BIN}}"
        -D CMAKE_C_EXTENSIONS=OFF
        $GITHUB_WORKSPACE/tests/pkgconfig/bare &&
        if [[ "${{matrix.CONF.GEN}}" == "Unix Makefiles" ]];
        then
          $CMAKE_EXE --build $GITHUB_WORKSPACE/build_package -- -j`nproc`;
        else
          $CMAKE_EXE --build $GITHUB_WORKSPACE/build_package --config Debug   -- -j`nproc`;
          $CMAKE_EXE --build $GITHUB_WORKSPACE/build_package --config Release -- -j`nproc`;
        fi;

    - name: Test pkg-config (DEB)
      shell: bash
      # /usr/include is already on the include search path,
      # we don't expect any output
      run: pkg-config OpenCL-Headers --cflags

    - name: Uninstall (DEB)
      shell: bash
      run: apt-get remove -y opencl-c-headers

    - name: Re-configure for install
      if: matrix.CMAKE == '3.0.2'
      shell: bash
      run: cd $GITHUB_WORKSPACE/build &&
        $CMAKE_EXE -D CMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/install $GITHUB_WORKSPACE

    - name: Test install
      shell: bash
      run: $CMAKE_EXE --build $GITHUB_WORKSPACE/build --target install --config ${{matrix.CONF.CONFIG}} -- -j`nproc`;

    - name: Consume (install)
      shell: bash
      run: mkdir $GITHUB_WORKSPACE/build_install && cd $GITHUB_WORKSPACE/build_install &&
        $CMAKE_EXE
        -G "${{matrix.CONF.GEN}}"
        -D CMAKE_BUILD_TYPE=${{matrix.CONF.CONFIG}}
        -D CMAKE_C_STANDARD=${{matrix.STD}}
        -D CMAKE_C_FLAGS="-Wall -Wextra -pedantic -Werror -m${{matrix.BIN}}"
        -D CMAKE_C_EXTENSIONS=OFF
        -D CMAKE_PREFIX_PATH=$GITHUB_WORKSPACE/install
        $GITHUB_WORKSPACE/tests/pkgconfig/bare &&
        if [[ "${{matrix.CONF.GEN}}" == "Unix Makefiles" ]];
        then
          $CMAKE_EXE --build $GITHUB_WORKSPACE/build_install -- -j`nproc`;
        else
          $CMAKE_EXE --build $GITHUB_WORKSPACE/build_install --config Debug   -- -j`nproc`;
          $CMAKE_EXE --build $GITHUB_WORKSPACE/build_install --config Release -- -j`nproc`;
        fi;

    - name: Test pkg-config (install)
      shell: bash
      run: PKG_CONFIG_PATH=$GITHUB_WORKSPACE/install/share/pkgconfig
        pkg-config OpenCL-Headers --cflags | grep -q "\-I$GITHUB_WORKSPACE/install/include"
